{"google":"UA-22120502-1","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Tarantool/Box","tagline":"a transactional NoSQL database","body":"TARANTOOL/BOX, http://tarantool.org\r\n\r\nTarantool is a framework for in-memory key/value storage and\r\nBox is a yet another in-memory key-value database.\r\n\r\nKey features of the pair include:\r\n * log streaming replication\r\n * hot standby\r\n * a simple binary protocol, as well as emulation of memcached\r\n   protocol\r\n * extensibility and speed\r\n\r\nCaveats:\r\n * supported platforms are Linux/x86 and FreeBSD/x86\r\n * supported compilers are clang and gcc.\r\n\r\nCOMPILATION AND INSTALL\r\n\r\nTarantool is written in C and Objective C.\r\nTo build, you will need GCC Objective C frontend\r\n(gcc-objc package on most systems) or Apple CLang compiler.\r\n\r\nCMake is used for configuration management.\r\n3 standard CMake build types are supported:\r\n * Debug -- used by project maintainers\r\n * RelWithDebugInfo -- the most common release configuration,\r\n also provides debugging capabilities\r\n * Release -- use only if the highest performance is required\r\n\r\nThe only external library dependency is readline: libreadline-dev\r\nis required to build the command line client.\r\n\r\nThere are two OPTIONAL dependencies: \r\n- uuid-dev. It is required for box.uuid_* functions.\r\n- GNU bfd (part of GNU binutils). It's used to print \r\na stack trace after a crash.\r\n\r\nPlease follow these steps to compile Tarantool:\r\n\r\ntarantool $ cmake .\r\ntarantool $ make\r\n\r\nTo use a different release type, say, RelWithDebugInfo, use:\r\n\r\ntarantool $ cmake . -DCMAKE_BUILD_TYPE=RelWithDebugInfo\r\n\r\nAdditional build options can be set similarly:\r\n\r\ntarantool $ cmake . -DCMAKE_BUILD_TYPE=RelWithDebugInfo -DENABLE_CLIENT=true\r\n\r\n-- builds the command line client.\r\n\r\n'make' creates tarantool_box executable in directory\r\nsrc/box and tarantool executable in client/tarantool.\r\n\r\nThere is no 'make install' goal, but no installation\r\nis required either.\r\nTarantool regression testing framework (test/test-run.py) is the\r\nsimplest way to setup and start the server, but it requires a few\r\nadditional Python modules:\r\n * daemon\r\n * pyyaml\r\n * pexpect.\r\n\r\nOnce all pre-requisites are installed, try:\r\n\r\ntarantool $ cd test && ./test-run.py --suite box --start-and-exit\r\n\r\nThis will create a 'var' subdirectory in directory 'test',\r\npopulate it with necessary files, and\r\nstart the server. To connect, you could use\r\na simplistic command-line client:\r\n\r\ntarantool $ ./test/tarantool\r\n\r\nAlternatively, if a customized server configuration is required,\r\nyou could follow these steps:\r\n\r\ntarantool $ emacs cfg/tarantool_box_cfg.cfg # edit the configuration\r\n# Initialize the storage directory, path to this directory\r\n# is specified in the configuration file:\r\ntarantool $ src/box/tarantool_box --config cfg/tarantool_box_cfg.cfg --init-storage\r\n#\r\n# run\r\ntarantool $ src/box/tarantool_box --config cfg/tarantool_box_cfg.cfg\r\n\r\nPlease report bugs at http://bugs.launchpad.net/tarantool.\r\nWe also warmly welcome your feedback in the discussion mailing\r\nlist, tarantool-developers@lists.launchpad.net, however, please be\r\nwarned: Launchpad silently deletes posts from non-subscribed\r\nmembers, thus please be sure to have subscribed to the list prior\r\nto posting.\r\n\r\nThank you for your interest in Tarantool!\r\n\r\n"}